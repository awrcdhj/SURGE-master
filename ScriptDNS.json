[root@DNSShifted.js ~] # cat dns.sh  //ate

/:DNS'changer reference this

#!/bin/bash 
var dns = require("dns")

 Modified Start
footer: |
 {NAME} Start
block_footer: |
  {NAME} End

}#获取url与外部服务器ip
url=$1
#获取ip
ip=$2

#向/etc/named.rfc1912.zoneswz尾插入
#zone "$url" IN {
#       type master;
#       file "$url.zone";
#        allow-update{ none; };
#};

cat>>/etc/named.rfc1912.zones<<EOF

zone "$url" IN {
       type master;
       file "$url.zone";
       allow-update{ none; };
};
EOF

#复制生成文件
cp -a /var/named/named.localhost /var/named/${url}.zone

   }

{#!获取HTTP-request执行解析引用header报价
    }
generic: proxy

route: D/E/Var>proxynode

    response: reply the list

    save: response
}$Done(Var)
   };
}
started => local {
          a&ns{analysis datas
Resolving: `datas'…
          
          Result: h_name= ｀Host: pull.free.video.10010.com’
          Result: h_addr_list= ｀127.0.0.1
          returned: data_list= `local'</$><quot/>export: Host_header => [H]/r/n
          import =< quot; servernode
-<'header'>request emcees =< Host: ("pull.free.video.10010.com")/>

server-sare$ => quot with locallink

-asked: HTTP_der => [Host]pull.free.video.10010.com {link~$data-transmit~<"$">import | WS-policy= $headers、Host.address
Host links {value=<adoption>'H:pull.free.video.10010.compower&
do{destination-networking}) {
  }
returned: http_proxy{request_lines->quote("$")
  /}
}}  $Done(Var)
var dns = require("dns")
var Server = require([比如, "$",'Serve')require
var dns = require([比如,'vary'ip]'(require)offer/quote

}#预取first和DoH-over-https
var dns = require("ip")
var Doh => require("dns")

var<'ip'>|<ask/><$/d.list/e.lis||}VAR\//===a&b) '{
    var ('A.$==VAR/>A&VAR,)<'$'=== A<'var'>/A.$ = Var>d('o 
A.$==VAR/>A\/VAR/=>give/$.A)>= {Var} do;  
  
  }
Var<'var.A'>|<$/>d.list  
Var<'var.B'>|<$/>e.list  
  
   }  
}#开始变化使服务持久与加固上述
dear || a&b&v</Variously>-a&b</v>=<del/dir/a+b}/$ == >Var('$')); end||</VAR/place=< Variously/><file/>a}:/)}'if End<Var/>|<read file'a/>restart<place{>/}Variously end else{
  
   }  
#$TTL 1D
#@      IN SOA  $url admin.$url. (
#                                       0       ; serial
#                                       1D      ; refresh
#                                       1H      ; retry
#                                       1W      ; expire
#                                       3H )    ; minimum
#       NS      datav.aliyuncs.com.
#       A       $ip

}#向/var/named/${url}.zone中插入

cat>/var/named/${url}.zone<<EOF
\$TTL 1D
@       IN SOA  $url admin.$url. (
                                        0       ; serial
                                        1D      ; refresh //#保留最优，SSID的网络更改刷新设定为十分钟一次#/\
                                        1H      ; retry
                                        1W      ; expire
                                        3H )    ; minimum
        NS      $url.
        A       $ip
EOF

echo "$IP $https complete"
  }  
</Straight>
Screen><Body/>
#/*阅读正文内容,一个逗号意为: 还有 :接下去参考，根据响应择优录用*\#
//list-down var ip = require('$')}does
 -named: d.list\}([,
$/ |      '9.9.9.9',
$/ |      '149.112.112.112',
$/ |      '42.120.21.30',
$/ |      '199.91.73.222',
$/ |      '178.79.131.110',
$/ |      '114.114.114.114',
$/ |      '119.29.29.29',
$/ |      '119.28.28.28',
$/ |      '123.207.137.88',
$/ |      '223.5.5.5',
$/ |      '223.6.6.6',
$/ |      '180.76.76.76',
$/ |      '203.80.96.10',
$/ |      '203.80.96.9',
$/ |      '4.2.2.1',
$/ |      '4.2.2.2',
$/ |      '69.58.187.40',
$/ |      '63.223.94.66',
$/ |      '63.223.94.66',
$/ |      '8.26.56.26',
$/ |      '8.20.247.20',
$/ |      '1.2.4.8',
$/ |      '210.2.4.8',
$/ |      '123.125.81.6',
$/ |      '101.101.101.101',
$/ |      '101.102.103.104',
$/ |      '80.80.80.80',
$/ |      '80.80.81.81',
$/ |      '37.120.152.235',
$/ |      '37.120.236.11',
$/ |      '37.120.142.115',
$/ |      '37.120.232.43',
$/ |      '218.30.118.6',
$/ |      '168.95.192.1',
$/ |      '168.95.1.1',
$/ |      '94.140.14.14',
$/ |      '94.140.15.15',
$/ |      '2a10:50c0::ad1:ff',
$/ |      '2a10:50c0::ad2:ff',
$/ |      '112.121.178.187',
$/ |      '123.206.61.167',
$/ |      '119.29.105.234',
$/ |      '223.113.97.99',
$/ |      '103.16.131.77',
$/ |      '140.207.198.6',
$/ |      '112.124.47.27',
$/ |      '114.215.126.16',
$/ |      '2620:74:10:2800::45',
$/ |      '2620:74:14:3000::40',
$/ |      '2a05:d016:af8:4000:7710:6fc:bde3:fe0e',
$/ |      '2001:41d0:302:2200::180',
$/ |      '2a04:bdc7:100:70::70',
$/ |      '2a00:5980:94::71',
$/ |      '2400:8904:e001:43::43',
$/ |      '2001:bc8:1824:738::1',
$/ |      '2001:bc8:1830:2018::1',
$/ |      '2a04:5200:fff4::13ff',
$/ |      '23.253.163.53',
$/ |      '198.101.242.72',
$/ |      '8.20.247.2',
$/ |      '209.131.162.45',
$/ |      '176.103.130.130',
$/ |      '94.140.14.140',
$/ |      '45.67.219.208',
$/ |      '74.82.42.42',
$/ |      '115.159.96.69',
$/ |      '122.114.245.45',
$/ |      '1.1.1.1',
$/ |      '1.0.0.1',
$/ |      '208.67.222.222',
$/ |      '208.67.222.220',
$/ |      '95.181.155.140',
$/ |      '51.15.124.208',
$/ |      '45.79.120.233',
$/ |      '185.253.154.66',
$/ |      '185.194.94.71',
$/ |      '185.228.168.10',
$/ |      '193.70.85.11',
$/ |      '13.49.175.86',
$/ |      '104.155.237.225',
$/ |      '208.67.220.220',
$/ |      '1.1.1.2',
$/ |      '1.0.0.2',
$/ |      '95.217.213.94',
$/ |      '212.78.94.4',
$/ |      '23.226.134.242',
$/ |      '182.254.116.116',
$/ |      '156.154.70.1',
$/ |      '182.254.116.116',
$/ |      '104.21.57.110',
$/ |      '172.67.145.168',
$/ |      '45.153.187.96',
$/ |      '72.11.134.90',
$/ |      '77.88.8.78',
$/ |      '217.169.20.23',
$/ |      '51.158.166.97',
$/ |      '149.154.153.153',
$/ |      '5.2.75.75',
$/ |      '115.159.220.214',
$/ |      '115.157.157.26',
$/ |      '115.159.158.38',
$/ |      '202.141.162.123',
$/ |      '202.38.93.153',
$/ |      '202.141.176.93',
$/ |      '115.159.146.99',
$/ |      '123.206.51.48'
   ])
}¥done(dNs)
{#/*DNS服务IP地址,由解析几何速度择优切换*/#

  }

}#获取DNS Over HTTPS服务地址,请见下文
 -name: e.list\}[
  "https://dns.alidns.com/resolve",
  "https://223.5.5.5/resolve",
  "https://223.6.6.6/resolve",
  "https://doh.la.ahadns.net/dns-query",
  "https://adfree.usableprivacy.net/dns-query",
  "https://dnsnl.alekberg.net/dns-query",
  "https://dns.adguard.com/dns-query",
  "https://dns.gooele.com/dns-query",
  "https://dns.circl.lu.com/dns-query"
/{  ]
#/*DNS Over HTTPS服务IP,根据动态IP服务地址解析速度择优录取*\#
}$done(D)
</Served>
</Body>
   },
}else{\
 </getdata('Host')=> headerd
 analysis: headerd with parse host in headerd</address> the </replaced = Host: pull.free.video.10010.com>
if not{
it's-offerer/{episode: ws-headers => "Host: pull.free.video.10010.com"
    Do}run imitation{headers->in{Host}data"$"{input}proxynode{do data ^quotes<("$"/)>
  ;}
} $done({Host});

  }
{#if'End&&var: quot: => resettl'serve /如果结尾结束,Var重新开始
  /}
}<Served/>
</Script>
</Body>
        }
}dong($)

<Served>
<Script>

{#!获取HTTP-request执行解析引用header报价
    }
generic: proxy

route: D/E/Var>proxynode

    response: reply the list

    save: response
}$Done(Var)
   };
}
started => local {
          a&ns{analysis datas
Resolving: `datas'…
          
          Result: h_name= ｀Host: pull.free.video.10010.com’
          Result: h_addr_list= ｀127.0.0.1
          returned: data_list= `local'</$><quot/>export: Host_header => [H]/r/n
          import =< quot; servernode
-<'header'>request emcees =< Host: ("pull.free.video.10010.com")/>

server-sare$ => quot with locallink

-asked: HTTP_der => [Host]pull.free.video.10010.com {link~$data-transmit~<"$">import | WS-policy= $headers、Host.address
Host links value=<adoption>'H:pull.free.video.10010.compower'
do{destination-networking}
returned: http_proxy{request_lines->quote("$")}
{
$Done({Hosts})」
- - - - - - - - - - - - - - -
